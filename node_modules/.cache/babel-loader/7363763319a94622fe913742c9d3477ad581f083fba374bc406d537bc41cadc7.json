{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elija\\\\Downloads\\\\Crypto_projects\\\\crypto_tax_calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { fetchCryptoCoins, fetchCryptoPriceHistory } from \"../../api/coingecko\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  max-width: 500px;\n  margin: auto;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background-color: #f9f9f9;\n`;\n_c = CalculatorContainer;\nconst Title = styled.h1`\n  font-size: 2em;\n  margin-bottom: 20px;\n`;\n_c2 = Title;\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  width: 100%;\n`;\n_c3 = Label;\nconst Input = styled.input`\n  padding: 10px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 1em;\n`;\n_c4 = Input;\nconst Select = styled.select`\n  padding: 10px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 1em;\n`;\n_c5 = Select;\nconst Result = styled.h2`\n  margin-top: 20px;\n  font-size: 1.5em;\n`;\n_c6 = Result;\nconst Calculator = () => {\n  _s();\n  const [buyDate, setBuyDate] = useState(\"\");\n  const [sellDate, setSellDate] = useState(\"\");\n  const [fees, setFees] = useState(0);\n  const [annualIncome, setAnnualIncome] = useState(0);\n  const [totalGainOrLoss, setTotalGainOrLoss] = useState(0);\n  const [taxRate, setTaxRate] = useState(0);\n  const [totalCapitalGainsTax, setTotalCapitalGainsTax] = useState(0);\n  const [taxOwed, setTaxOwed] = useState(0);\n  const [coins, setCoins] = useState([]);\n  const [selectedCoin, setSelectedCoin] = useState({});\n  const [historicalPrices, setHistoricalPrices] = useState({\n    buyPrice: 0,\n    sellPrice: 0\n  });\n  const [buyQuantity, setBuyQuantity] = useState(0);\n  const [sellQuantity, setSellQuantity] = useState(0);\n  useEffect(() => {\n    const fetchCryptoAssets = async () => {\n      try {\n        const response = await fetchCryptoCoins();\n        if (response) {\n          setCoins(response);\n          setSelectedCoin(response[0]); // Default to the first asset\n        } else {\n          throw new Error(\"Failed to fetch crypto assets\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching crypto assets:\", error);\n      }\n    };\n    fetchCryptoAssets();\n  }, []);\n  useEffect(() => {\n    const fetchHistoricalPrices = async () => {\n      if (!selectedCoin.id || !buyDate || !sellDate) return;\n      try {\n        const buyPriceResponse = await fetchCryptoPriceHistory(selectedCoin.id, buyDate);\n        const sellPriceResponse = await fetchCryptoPriceHistory(selectedCoin.id, sellDate);\n        if (buyPriceResponse && sellPriceResponse) {\n          setHistoricalPrices({\n            buyPrice: buyPriceResponse.market_data.current_price.usd,\n            sellPrice: sellPriceResponse.market_data.current_price.usd\n          });\n        } else {\n          throw new Error(\"Failed to fetch historical prices\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching historical prices:\", error);\n      }\n    };\n    fetchHistoricalPrices();\n  }, [selectedCoin, buyDate, sellDate]);\n  const calculateGainLoss = useCallback(() => {\n    const {\n      buyPrice,\n      sellPrice\n    } = historicalPrices;\n    console.log(\"Calculating gain/loss with:\", {\n      buyPrice,\n      sellPrice,\n      buyQuantity,\n      sellQuantity,\n      fees\n    });\n    if (!buyPrice || !sellPrice || buyQuantity <= 0 || sellQuantity <= 0) {\n      setTotalGainOrLoss(0);\n      return;\n    }\n    const buyTotal = buyPrice * buyQuantity;\n    const sellTotal = sellPrice * sellQuantity;\n    const gainLoss = sellTotal - buyTotal - fees;\n    console.log(\"Gain/Loss Calculated:\", gainLoss); // Debugging line\n    setTotalGainOrLoss(parseFloat(gainLoss.toFixed(2)));\n  }, [historicalPrices, fees, buyQuantity, sellQuantity]);\n  useEffect(() => {\n    calculateGainLoss();\n  }, [calculateGainLoss]);\n  const calculateTax = useCallback(() => {\n    if (totalGainOrLoss <= 0) {\n      setTotalCapitalGainsTax(0);\n      setTaxOwed(0);\n      return;\n    }\n    let taxPercentage = 0;\n    if (annualIncome > 18200) {\n      taxPercentage = 19;\n      if (annualIncome > 45001) {\n        taxPercentage = 32.5;\n      }\n      if (annualIncome > 120001) {\n        taxPercentage = 37;\n      }\n      if (annualIncome > 180001) {\n        taxPercentage = 45;\n      }\n    }\n    setTaxRate(taxPercentage);\n    let totalTax = totalGainOrLoss * taxPercentage / 100;\n    setTotalCapitalGainsTax(parseFloat(totalTax.toFixed(2)));\n\n    // Assume some deductions or adjustments for simplicity\n    const deductions = 1000; // Example deduction\n    const adjustedTax = totalTax - deductions;\n    setTaxOwed(Math.max(0, adjustedTax.toFixed(2))); // Tax owed can't be negative\n\n    console.log(\"Tax Calculated:\", {\n      totalCapitalGainsTax,\n      taxOwed\n    }); // Debugging line\n  }, [totalGainOrLoss, annualIncome]);\n  useEffect(() => {\n    calculateTax();\n  }, [totalGainOrLoss, annualIncome, taxRate, calculateTax]);\n  const handleAssetChange = e => {\n    const selectedCoinId = e.target.value;\n    const selectedCoinData = coins.find(coin => coin.id === selectedCoinId);\n    setSelectedCoin(selectedCoinData || {});\n  };\n  const handleBuyDateChange = e => {\n    setBuyDate(e.target.value);\n  };\n  const handleSellDateChange = e => {\n    setSellDate(e.target.value);\n  };\n  const handleBuyQuantityChange = e => {\n    setBuyQuantity(parseFloat(e.target.value));\n  };\n  const handleSellQuantityChange = e => {\n    setSellQuantity(parseFloat(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(CalculatorContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Crypto Tax Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Select Asset:\", /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedCoin.id || '',\n        onChange: handleAssetChange,\n        children: coins.map(asset => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: asset.id,\n          children: asset.name\n        }, asset.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), selectedCoin.current_price && /*#__PURE__*/_jsxDEV(Result, {\n      children: [\"Current Price: $\", selectedCoin.current_price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Buy Date:\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        value: buyDate,\n        onChange: handleBuyDateChange,\n        placeholder: \"Buy Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Sell Date:\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        value: sellDate,\n        onChange: handleSellDateChange,\n        placeholder: \"Sell Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Buy Quantity:\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        min: 0,\n        value: buyQuantity,\n        onChange: handleBuyQuantityChange,\n        placeholder: \"Buy Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Sell Quantity:\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        min: 0,\n        value: sellQuantity,\n        onChange: handleSellQuantityChange,\n        placeholder: \"Sell Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Annual Income:\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        min: 0,\n        value: annualIncome,\n        onChange: e => setAnnualIncome(parseFloat(e.target.value)),\n        placeholder: \"Annual Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Fees:\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        min: 0,\n        value: fees,\n        onChange: e => setFees(parseFloat(e.target.value)),\n        placeholder: \"Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      children: [\"Total Gain or Loss: $\", totalGainOrLoss]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      children: [\"Tax Rate: \", taxRate, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      children: [\"Total Capital Gains Tax You Will Pay: $\", totalCapitalGainsTax]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      children: [\"Tax Owed: $\", taxOwed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"TdCkQGAPyA0EyXkHHTeJAen0quA=\");\n_c7 = Calculator;\nexport default Calculator;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"CalculatorContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Select\");\n$RefreshReg$(_c6, \"Result\");\n$RefreshReg$(_c7, \"Calculator\");","map":{"version":3,"names":["useState","useEffect","useCallback","styled","fetchCryptoCoins","fetchCryptoPriceHistory","jsxDEV","_jsxDEV","CalculatorContainer","div","_c","Title","h1","_c2","Label","label","_c3","Input","input","_c4","Select","select","_c5","Result","h2","_c6","Calculator","_s","buyDate","setBuyDate","sellDate","setSellDate","fees","setFees","annualIncome","setAnnualIncome","totalGainOrLoss","setTotalGainOrLoss","taxRate","setTaxRate","totalCapitalGainsTax","setTotalCapitalGainsTax","taxOwed","setTaxOwed","coins","setCoins","selectedCoin","setSelectedCoin","historicalPrices","setHistoricalPrices","buyPrice","sellPrice","buyQuantity","setBuyQuantity","sellQuantity","setSellQuantity","fetchCryptoAssets","response","Error","error","console","fetchHistoricalPrices","id","buyPriceResponse","sellPriceResponse","market_data","current_price","usd","calculateGainLoss","log","buyTotal","sellTotal","gainLoss","parseFloat","toFixed","calculateTax","taxPercentage","totalTax","deductions","adjustedTax","Math","max","handleAssetChange","e","selectedCoinId","target","value","selectedCoinData","find","coin","handleBuyDateChange","handleSellDateChange","handleBuyQuantityChange","handleSellQuantityChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","asset","name","type","placeholder","min","_c7","$RefreshReg$"],"sources":["C:/Users/elija/Downloads/Crypto_projects/crypto_tax_calculator/src/components/Calculator/Calculator.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCryptoCoins, fetchCryptoPriceHistory } from \"../../api/coingecko\";\r\n\r\nconst CalculatorContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  max-width: 500px;\r\n  margin: auto;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  background-color: #f9f9f9;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2em;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  margin-top: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: 10px;\r\n  margin-top: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Result = styled.h2`\r\n  margin-top: 20px;\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Calculator = () => {\r\n  const [buyDate, setBuyDate] = useState(\"\");\r\n  const [sellDate, setSellDate] = useState(\"\");\r\n  const [fees, setFees] = useState(0);\r\n  const [annualIncome, setAnnualIncome] = useState(0);\r\n  const [totalGainOrLoss, setTotalGainOrLoss] = useState(0);\r\n  const [taxRate, setTaxRate] = useState(0);\r\n  const [totalCapitalGainsTax, setTotalCapitalGainsTax] = useState(0);\r\n  const [taxOwed, setTaxOwed] = useState(0);\r\n  const [coins, setCoins] = useState([]);\r\n  const [selectedCoin, setSelectedCoin] = useState({});\r\n  const [historicalPrices, setHistoricalPrices] = useState({\r\n    buyPrice: 0,\r\n    sellPrice: 0,\r\n  });\r\n  const [buyQuantity, setBuyQuantity] = useState(0);\r\n  const [sellQuantity, setSellQuantity] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoAssets = async () => {\r\n      try {\r\n        const response = await fetchCryptoCoins();\r\n        if (response) {\r\n          setCoins(response);\r\n          setSelectedCoin(response[0]); // Default to the first asset\r\n        } else {\r\n          throw new Error(\"Failed to fetch crypto assets\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching crypto assets:\", error);\r\n      }\r\n    };\r\n    fetchCryptoAssets();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchHistoricalPrices = async () => {\r\n      if (!selectedCoin.id || !buyDate || !sellDate) return;\r\n\r\n      try {\r\n        const buyPriceResponse = await fetchCryptoPriceHistory(\r\n          selectedCoin.id,\r\n          buyDate\r\n        );\r\n        const sellPriceResponse = await fetchCryptoPriceHistory(\r\n          selectedCoin.id,\r\n          sellDate\r\n        );\r\n\r\n        if (buyPriceResponse && sellPriceResponse) {\r\n          setHistoricalPrices({\r\n            buyPrice: buyPriceResponse.market_data.current_price.usd,\r\n            sellPrice: sellPriceResponse.market_data.current_price.usd,\r\n          });\r\n        } else {\r\n          throw new Error(\"Failed to fetch historical prices\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching historical prices:\", error);\r\n      }\r\n    };\r\n\r\n    fetchHistoricalPrices();\r\n  }, [selectedCoin, buyDate, sellDate]);\r\n\r\n  const calculateGainLoss = useCallback(() => {\r\n    const { buyPrice, sellPrice } = historicalPrices;\r\n    console.log(\"Calculating gain/loss with:\", { buyPrice, sellPrice, buyQuantity, sellQuantity, fees });\r\n    if (!buyPrice || !sellPrice || buyQuantity <= 0 || sellQuantity <= 0) {\r\n      setTotalGainOrLoss(0);\r\n      return;\r\n    }\r\n\r\n    const buyTotal = buyPrice * buyQuantity;\r\n    const sellTotal = sellPrice * sellQuantity;\r\n    const gainLoss = sellTotal - buyTotal - fees;\r\n\r\n    console.log(\"Gain/Loss Calculated:\", gainLoss); // Debugging line\r\n    setTotalGainOrLoss(parseFloat(gainLoss.toFixed(2)));\r\n  }, [historicalPrices, fees, buyQuantity, sellQuantity]);\r\n\r\n  useEffect(() => {\r\n    calculateGainLoss();\r\n  }, [calculateGainLoss]);\r\n\r\n  const calculateTax = useCallback(() => {\r\n    if (totalGainOrLoss <= 0) {\r\n      setTotalCapitalGainsTax(0);\r\n      setTaxOwed(0);\r\n      return;\r\n    }\r\n\r\n    let taxPercentage = 0;\r\n    if (annualIncome > 18200) {\r\n      taxPercentage = 19;\r\n      if (annualIncome > 45001) {\r\n        taxPercentage = 32.5;\r\n      }\r\n      if (annualIncome > 120001) {\r\n        taxPercentage = 37;\r\n      }\r\n      if (annualIncome > 180001) {\r\n        taxPercentage = 45;\r\n      }\r\n    }\r\n\r\n    setTaxRate(taxPercentage);\r\n\r\n    let totalTax = (totalGainOrLoss * taxPercentage) / 100;\r\n    setTotalCapitalGainsTax(parseFloat(totalTax.toFixed(2)));\r\n\r\n    // Assume some deductions or adjustments for simplicity\r\n    const deductions = 1000; // Example deduction\r\n    const adjustedTax = totalTax - deductions;\r\n    setTaxOwed(Math.max(0, adjustedTax.toFixed(2))); // Tax owed can't be negative\r\n\r\n    console.log(\"Tax Calculated:\", { totalCapitalGainsTax, taxOwed }); // Debugging line\r\n  }, [totalGainOrLoss, annualIncome]);\r\n\r\n  useEffect(() => {\r\n    calculateTax();\r\n  }, [totalGainOrLoss, annualIncome, taxRate, calculateTax]);\r\n\r\n  const handleAssetChange = (e) => {\r\n    const selectedCoinId = e.target.value;\r\n    const selectedCoinData = coins.find((coin) => coin.id === selectedCoinId);\r\n    setSelectedCoin(selectedCoinData || {});\r\n  };\r\n\r\n  const handleBuyDateChange = (e) => {\r\n    setBuyDate(e.target.value);\r\n  };\r\n\r\n  const handleSellDateChange = (e) => {\r\n    setSellDate(e.target.value);\r\n  };\r\n\r\n  const handleBuyQuantityChange = (e) => {\r\n    setBuyQuantity(parseFloat(e.target.value));\r\n  };\r\n\r\n  const handleSellQuantityChange = (e) => {\r\n    setSellQuantity(parseFloat(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <CalculatorContainer>\r\n      <Title>Crypto Tax Calculator</Title>\r\n      <Label>\r\n        Select Asset:\r\n        <Select value={selectedCoin.id || ''} onChange={handleAssetChange}>\r\n          {coins.map((asset) => (\r\n            <option key={asset.id} value={asset.id}>\r\n              {asset.name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </Label>\r\n      {selectedCoin.current_price && (\r\n        <Result>Current Price: ${selectedCoin.current_price}</Result>\r\n      )}\r\n      <Label>\r\n        Buy Date:\r\n        <Input\r\n          type=\"date\"\r\n          value={buyDate}\r\n          onChange={handleBuyDateChange}\r\n          placeholder=\"Buy Date\"\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Sell Date:\r\n        <Input\r\n          type=\"date\"\r\n          value={sellDate}\r\n          onChange={handleSellDateChange}\r\n          placeholder=\"Sell Date\"\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Buy Quantity:\r\n        <Input\r\n          type=\"number\"\r\n          min={0}\r\n          value={buyQuantity}\r\n          onChange={handleBuyQuantityChange}\r\n          placeholder=\"Buy Quantity\"\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Sell Quantity:\r\n        <Input\r\n          type=\"number\"\r\n          min={0}\r\n          value={sellQuantity}\r\n          onChange={handleSellQuantityChange}\r\n          placeholder=\"Sell Quantity\"\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Annual Income:\r\n        <Input\r\n          type=\"number\"\r\n          min={0}\r\n          value={annualIncome}\r\n          onChange={(e) => setAnnualIncome(parseFloat(e.target.value))}\r\n          placeholder=\"Annual Income\"\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Fees:\r\n        <Input\r\n          type=\"number\"\r\n          min={0}\r\n          value={fees}\r\n          onChange={(e) => setFees(parseFloat(e.target.value))}\r\n          placeholder=\"Fees\"\r\n        />\r\n      </Label>\r\n      <Result>Total Gain or Loss: ${totalGainOrLoss}</Result>\r\n      <Result>Tax Rate: {taxRate}%</Result>\r\n      <Result>Total Capital Gains Tax You Will Pay: ${totalCapitalGainsTax}</Result>\r\n      <Result>Tax Owed: ${taxOwed}</Result>\r\n    </CalculatorContainer>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}