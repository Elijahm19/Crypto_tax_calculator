{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nconst COINGECKO_API_URL = \"https://api.coingecko.com/api/v3\";\nconst API_KEY = \"your_api_key_here\"; // Replace with your actual API key\n\nexport const fetchCryptoPriceHistory = async (id, date) => {\n  const formattedDate = moment(date, \"YYYY-MM-DD\").format(\"DD-MM-YYYY\");\n  try {\n    const response = await axios.get(`${COINGECKO_API_URL}/coins/${id}/history?date=${formattedDate}`, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}` // Example of including an API key in the headers\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching crypto prices\", error);\n    throw error;\n  }\n};\nexport const fetchCryptoCoins = async () => {\n  try {\n    const response = await axios.get(`${COINGECKO_API_URL}/coins/markets?vs_currency=usd`, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}` // Example of including an API key in the headers\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching crypto coins\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","moment","COINGECKO_API_URL","API_KEY","fetchCryptoPriceHistory","id","date","formattedDate","format","response","get","headers","data","error","console","fetchCryptoCoins"],"sources":["C:/Users/elija/Downloads/Crypto_projects/crypto_tax_calculator/src/api/coingecko.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst COINGECKO_API_URL = \"https://api.coingecko.com/api/v3\";\r\nconst API_KEY = \"your_api_key_here\"; // Replace with your actual API key\r\n\r\nexport const fetchCryptoPriceHistory = async (id, date) => {\r\n  const formattedDate = moment(date, \"YYYY-MM-DD\").format(\"DD-MM-YYYY\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${COINGECKO_API_URL}/coins/${id}/history?date=${formattedDate}`,\r\n      {\r\n        headers: {\r\n          'Authorization': `Bearer ${API_KEY}`, // Example of including an API key in the headers\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching crypto prices\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchCryptoCoins = async () => {\r\n  try {\r\n    const response = await axios.get(`${COINGECKO_API_URL}/coins/markets?vs_currency=usd`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${API_KEY}`, // Example of including an API key in the headers\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching crypto coins\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,iBAAiB,GAAG,kCAAkC;AAC5D,MAAMC,OAAO,GAAG,mBAAmB,CAAC,CAAC;;AAErC,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,IAAI,KAAK;EACzD,MAAMC,aAAa,GAAGN,MAAM,CAACK,IAAI,EAAE,YAAY,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;EACrE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,GAAGR,iBAAiB,UAAUG,EAAE,iBAAiBE,aAAa,EAAE,EAChE;MACEI,OAAO,EAAE;QACP,eAAe,EAAE,UAAUR,OAAO,EAAE,CAAE;MACxC;IACF,CACF,CAAC;IACD,OAAOM,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,iBAAiB,gCAAgC,EAAE;MACrFS,OAAO,EAAE;QACP,eAAe,EAAE,UAAUR,OAAO,EAAE,CAAE;MACxC;IACF,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}